name: Publish and commit bottles

on: repository_dispatch

jobs:
  upload:
    runs-on: ubuntu-latest
    container:
      image: homebrew/brew
      options: -v /usr/bin/unzip:/usr/bin/unzip
    env:
      HOMEBREW_DEVELOPER: 1
      HOMEBREW_FORCE_HOMEBREW_ON_LINUX: 1
      HOMEBREW_NO_ANALYTICS: 1
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - name: Set up git information
        uses: actions/github-script@0.9.0
        id: env
        with:
          script: |
            const user = await github.users.getByUsername({
              username: context.actor
            })
            const email = (user.data.email || user.data.id + "+" + user.data.login + "@users.noreply.github.com")
            const name = (user.data.name || user.data.login)
            console.log("Dispatched by " + name + " <" + email + ">")
            core.setOutput("name", name)
            core.setOutput("email", email)
      - name: Post comment once started
        uses: actions/github-script@0.9.0
        with:
          github-token: ${{secrets.HOMEBREW_GITHUB_API_TOKEN}}
          script: |
            const run_id = process.env.GITHUB_RUN_ID
            const actor = context.actor
            const pr = context.payload.client_payload.pull_request
            console.log("run_id=" + run_id)
            console.log("actor=" + actor)
            console.log("pr=" + pr)

            const repository = context.repo.owner + '/' + context.repo.repo
            const url = 'https://github.com/' + repository + '/actions/runs/' + run_id

            github.issues.createComment({
              ...context.repo,
              issue_number: pr,
              body: '@' + actor + ' has [triggered a merge](' + url + ').'
            })
      - name: Update Homebrew
        run: |
          brew update-reset $(brew --repository)
      - name: Checkout tap
        uses: actions/checkout@v2
        with:
          token: ${{secrets.HOMEBREW_GITHUB_API_TOKEN}}
          fetch-depth: 0
      - name: Setup tap
        run: |
          rm -rf $(brew --repository ${{github.repository}})
          ln -s $GITHUB_WORKSPACE $(brew --repository ${{github.repository}})
      - name: Setup git
        run: |
          git config --global user.name "${{steps.env.outputs.name}}"
          git config --global user.email "${{steps.env.outputs.email}}"
      - name: Pull bottles
        env:
          HOMEBREW_GITHUB_API_TOKEN: ${{secrets.GITHUB_TOKEN}}
          HOMEBREW_BINTRAY_USER: brewtestbot
          HOMEBREW_BINTRAY_KEY: ${{secrets.HOMEBREW_BINTRAY_KEY}}
        run: |
          brew pr-pull --verbose ${{github.event.client_payload.pull_request}}
      - name: Push bottle commit
        run: |
          for try in $(seq 5); do
            git fetch
            git rebase origin/master
            if git push; then
              exit 0
            else
              sleep $(shuf -i 3-10 -n 1)
            fi
          done
          exit 1
      - name: Post comment on failure
        if: failure()
        uses: actions/github-script@0.9.0
        with:
          github-token: ${{secrets.HOMEBREW_GITHUB_API_TOKEN}}
          script: |
            const run_id = process.env.GITHUB_RUN_ID
            const actor = context.actor
            const pr = context.payload.client_payload.pull_request
            console.log("run_id=" + run_id)
            console.log("actor=" + actor)
            console.log("pr=" + pr)

            const repository = context.repo.owner + '/' + context.repo.repo
            const url = 'https://github.com/' + repository + '/actions/runs/' + run_id

            github.issues.createComment({
              ...context.repo,
              issue_number: pr,
              body: '@' + actor + ' bottle publish [failed](' + url + ').'
            })

            github.issues.removeLabel({
              ...context.repo,
              issue_number: pr,
              name: "ready to merge"
            })
